swagger: '2.0'
info:
  title: API Title
  version: '1.0'
tags:
- name: "flow"
  description: "flowに関するAPI"
- name: "path"
  description: "pathに関するAPI"
- name: "task"
  description: "taskに関するAPI"

paths:
  /flow:
    get:
      tags:
      - "flow"
      responses:
        '200':
          description: OK
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Flow"
    post:
      tags:
      - "flow"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "name"
        in: "formData"
        description: "new flow name"
        required: true
        type: "string"
      responses:
        '200':
          description: OK
          schema:
            $ref: "#/definitions/Flow"
  /flow/{flow_id}:
    delete:
      tags:
      - "flow"
      responses:
        '200':
          description: OK
    put:
      tags:
      - "flow"
      parameters:
      - name: "name"
        in: "formData"
        description: "new flow name"
        required: true
        type: "string"
      responses:
        '200':
          description: OK
          schema:
            $ref: "#/definitions/Flow"
  /task:
    get:
      tags:
      - "task"
      responses:
        '200':
          description: OK
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Task"
    post:
      tags:
      - "task"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "name"
        in: "formData"
        description: "new task name"
        required: true
        type: "string"
      - name: "type"
        in: "formData"
        description: "new flow name"
        required: true
        type: "string"
      - name: "actor"
        in: "formData"
        description: "new flow actor"
        required: true
        type: "string"
      responses:
        '200':
          description: OK
          schema:
            $ref: "#/definitions/Flow"
  /task/{task_id}:
    delete:
      tags:
      - "task"
      responses:
        '200':
          description: OK
    put:
      tags:
      - "task"
      parameters:
      - name: "name"
        in: "formData"
        description: "new task name"
        required: true
        type: "string"
      - name: "type"
        in: "formData"
        description: "new flow name"
        required: true
        type: "string"
      - name: "actor"
        in: "formData"
        description: "new flow actor"
        required: true
        type: "string"
      responses:
        '200':
          description: OK
          schema:
            $ref: "#/definitions/Flow"
  /path:
    get:
      tags:
      - "path"
      responses:
        '200':
          description: OK
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Path"
    post:
      tags:
      - "path"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "name"
        in: "formData"
        description: "new task name"
        required: true
        type: "string"
      - name: "type"
        in: "formData"
        description: "new flow name"
        required: true
        type: "string"
      - name: "actor"
        in: "formData"
        description: "new flow actor"
        required: true
        type: "string"
      responses:
        '200':
          description: OK
          schema:
            $ref: "#/definitions/Flow"
  /path/{path_id}:
    delete:
      tags:
      - "path"
      responses:
        '200':
          description: OK
    put:
      tags:
      - "path"
      parameters:
      - name: "name"
        in: "formData"
        description: "new task name"
        required: true
        type: "string"
      - name: "type"
        in: "formData"
        description: "new flow name"
        required: true
        type: "string"
      - name: "actor"
        in: "formData"
        description: "new flow actor"
        required: true
        type: "string"
      responses:
        '200':
          description: OK
          schema:
            $ref: "#/definitions/Path"

definitions:
  Flow:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        format: "vchar(100)"
      created_at:
        type: "string"
        format: "date"
      updated_at:
        type: "string"
        format: "date"
    xml:
      name: "Flow"
  Task:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      flow_id:
        type: "string"
        format: "vchar(100)"
      name:
        type: "string"
        format: "vchar(100)"
      type:
        type: "string"
        $ref: "#/definitions/Task_type"
      actor:
        type: "string"
        $ref: "#/definitions/Actor"
      created_at:
        type: "string"
        format: "date"
      updated_at:
        type: "string"
        format: "date"
    xml:
      name: "Task"
  Path:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      flow_id:
        type: "string"
        format: "vchar(100)"
      type:
        type: "string"
        $ref: "#/definitions/Path_type"
      from_task_id:
        type: "integer"
        format: "vchar(100)"
      to_task_id:
        type: "integer"
        format: "vchar(100)"
      created_at:
        type: "string"
        format: "date"
      updated_at:
        type: "string"
        format: "date"
    xml:
      name: "Path"
  Actor:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        format: "vchar(100)"
      created_at:
        type: "string"
        format: "date"
      updated_at:
        type: "string"
        format: "date"
    xml:
      name: "Actor"
  Task_type:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        format: "vchar(100)"
      created_at:
        type: "string"
        format: "date"
      updated_at:
        type: "string"
        format: "date"
    xml:
      name: "Task_type"
  Path_type:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        format: "vchar(100)"
      created_at:
        type: "string"
        format: "date"
      updated_at:
        type: "string"
        format: "date"
    xml:
      name: "Path_type"



  # Category:
  #   type: "object"
  #   properties:
  #     id:
  #       type: "integer"
  #       format: "int64"
  #     name:
  #       type: "string"
  #   xml:
  #     name: "Category"
  # User:
  #   type: "object"
  #   properties:
  #     id:
  #       type: "integer"
  #       format: "int64"
  #     username:
  #       type: "string"
  #     firstName:
  #       type: "string"
  #     lastName:
  #       type: "string"
  #     email:
  #       type: "string"
  #     password:
  #       type: "string"
  #     phone:
  #       type: "string"
  #     userStatus:
  #       type: "integer"
  #       format: "int32"
  #       description: "User Status"
  #   xml:
  #     name: "User"
  # Tag:
  #   type: "object"
  #   properties:
  #     id:
  #       type: "integer"
  #       format: "int64"
  #     name:
  #       type: "string"
  #   xml:
  #     name: "Tag"
