swagger: '2.0'
info:
  title: API Title
  version: '1.0'
tags:
  - name: 'flows'
    description: 'flowに関するAPI'
  - name: 'tasks'
    description: 'taskに関するAPI'
  - name: 'paths'
    description: 'pathに関するAPI'
  - name: 'actors'
    description: 'actorに関するAPI'
  - name: 'task_types'
    description: 'task_typeに関するAPI'
  - name: 'path_types'
    description: 'path_typeに関するAPI'

paths:
  /flows:
    get:
      tags:
        - 'flows'
      responses:
        '200':
          description: OK
          schema:
            type: 'array'
            items:
              $ref: '#/definitions/Flow'
    post:
      tags:
        - 'flows'
      produces:
        - 'application/json'
      parameters:
        - name: 'name'
          in: 'formData'
          description: '新規flowの名前'
          required: true
          type: 'string'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Flow'
  /flows/{flow_id}:
    get:
      tags:
        - 'flows'
      parameters:
        - name: 'flow_id'
          in: 'path'
          description: '取得するflowのid'
          required: true
          type: 'number'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Flow'
    delete:
      tags:
        - 'flows'
      parameters:
        - name: 'flow_id'
          in: 'path'
          description: '削除するflowのid'
          required: true
          type: 'number'
      responses:
        '200':
          description: OK
    put:
      tags:
        - 'flows'
      parameters:
        - name: 'flow_id'
          in: 'path'
          description: '更新するflowのid'
          required: true
          type: 'number'
        - name: 'name'
          in: 'formData'
          description: '更新後のflowのname'
          required: true
          type: 'string'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Flow'
  /flows/{flow_id}/tasks:
    get:
      tags:
        - 'flows'
      responses:
        '200':
          description: OK
          schema:
            type: 'array'
            items:
              $ref: '#/definitions/Task'
  /flows/{flow_id}/paths:
    get:
      tags:
        - 'flows'
      responses:
        '200':
          description: OK
          schema:
            type: 'array'
            items:
              $ref: '#/definitions/Path'
  /flows/{flow_id}/actors:
    get:
      tags:
        - 'flows'
      responses:
        '200':
          description: OK
          schema:
            type: 'array'
            items:
              $ref: '#/definitions/Actor'
  /tasks:
    post:
      tags:
        - 'tasks'
      produces:
        - 'application/json'
      parameters:
        - name: 'flow_id'
          in: 'formData'
          description: '新規taskのflowのid'
          required: true
          type: 'number'
        - name: 'name'
          in: 'formData'
          description: '新規taskのname'
          required: true
          type: 'string'
        - name: 'type_id'
          in: 'formData'
          description: '新規taskのtypeのid'
          required: true
          type: 'number'
        - name: 'actor_id'
          in: 'formData'
          description: '新規taskのactorのid'
          required: true
          type: 'number'
        - name: 'x'
          in: 'formData'
          description: '新規taskのx座標の値'
          required: true
          type: 'number'
        - name: 'y'
          in: 'formData'
          description: '新規taskのy座標の値'
          required: true
          type: 'number'
        - name: 'label'
          in: 'formData'
          description: '新規taskのlabel'
          required: false
          type: 'string'
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/Task'
  /tasks/{task_id}:
    get:
      tags:
        - 'tasks'
      parameters:
        - name: 'task_id'
          in: 'path'
          description: '取得するtaskのid'
          required: true
          type: 'number'
      responses:
        '200':
          description: OK
          schema:
            type: 'array'
            $ref: '#/definitions/Task'
    delete:
      tags:
        - 'tasks'
      parameters:
        - name: 'task_id'
          in: 'path'
          description: '削除するtaskのid'
          required: true
          type: 'number'
      responses:
        '200':
          description: OK
    put:
      tags:
        - 'tasks'
      parameters:
        - name: 'task_id'
          in: 'path'
          description: '更新するtaskのid'
          required: true
          type: 'number'
        - name: 'name'
          in: 'formData'
          description: '更新後のtaskのname'
          required: true
          type: 'string'
        - name: 'type_id'
          in: 'formData'
          description: '更新後のtaskのtypeのid'
          required: true
          type: 'number'
        - name: 'actor_id'
          in: 'formData'
          description: '更新後のtaskのactorのid'
          required: true
          type: 'number'
        - name: 'x'
          in: 'formData'
          description: '更新後のtaskのx座標の値'
          required: true
          type: 'number'
        - name: 'y'
          in: 'formData'
          description: '更新後のtaskのy座標の値'
          required: true
          type: 'number'
        - name: 'label'
          in: 'formData'
          description: '更新後のtaskのlabel'
          required: false
          type: 'string'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Flow'
  /paths:
    post:
      tags:
        - 'paths'
      produces:
        - 'application/json'
      parameters:
        - name: 'flow_id'
          in: 'formData'
          description: '新規pathが所属しているflowのid'
          required: true
          type: 'number'
        - name: 'type_id'
          in: 'formData'
          description: '新規pathのタイプのid'
          required: true
          type: 'string'
        - name: 'from_task_id'
          in: 'formData'
          description: '新規pathの元になるtaskのid'
          required: true
          type: 'number'
        - name: 'to_task_id'
          in: 'formData'
          description: '新規pathの先になるtaskのid'
          required: true
          type: 'number'
        - name: 'label'
          in: 'formData'
          description: '新規pathのlabel'
          required: false
          type: 'string'
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/Path'
  /paths/{path_id}:
    get:
      tags:
        - 'paths'
      parameters:
        - name: 'path_id'
          in: 'path'
          description: '取得するpathのid'
          required: true
          type: 'number'
      responses:
        '200':
          description: OK
          schema:
            type: 'array'
            $ref: '#/definitions/Path'
    delete:
      tags:
        - 'paths'
      parameters:
        - name: 'path_id'
          in: 'path'
          description: '削除するpathのid'
          required: true
          type: 'number'
      responses:
        '200':
          description: OK
    put:
      tags:
        - 'paths'
      parameters:
        - name: 'path_id'
          in: 'path'
          description: '更新するpathのid'
          required: true
          type: 'number'
        - name: 'type_id'
          in: 'formData'
          description: '更新後のtypeのid'
          required: true
          type: 'number'
        - name: 'from_task_id'
          in: 'formData'
          description: '更新後のpathの元になるtaskのid'
          required: true
          type: 'number'
        - name: 'to_task_id'
          in: 'formData'
          description: '更新後のpathの先になるtaskのid'
          required: true
          type: 'number'
        - name: 'label'
          in: 'formData'
          description: '更新後のpathのlabel'
          required: false
          type: 'string'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Path'
  /actors:
    post:
      tags:
        - 'actors'
      produces:
        - 'application/json'
      parameters:
        - name: 'flow_id'
          in: 'formData'
          description: '新規actorが所属しているflowのid'
          required: true
          type: 'number'
        - name: 'name'
          in: 'formData'
          description: '新規actorのname'
          required: true
          type: 'string'
      responses:
        '201':
          description: OK
          schema:
            $ref: '#/definitions/Actor'
  /actors/{actor_id}:
    get:
      tags:
        - 'actors'
      parameters:
        - name: 'actor_id'
          in: 'path'
          description: '取得するactorのid'
          required: true
          type: 'number'
      responses:
        '200':
          description: OK
          schema:
            type: 'array'
            $ref: '#/definitions/Actor'
    delete:
      tags:
        - 'actors'
      parameters:
        - name: 'actor_id'
          in: 'path'
          description: '削除するactorのid'
          required: true
          type: 'number'
      responses:
        '200':
          description: OK
    put:
      tags:
        - 'actors'
      parameters:
        - name: 'actor_id'
          in: 'path'
          description: '更新するactorのid'
          required: true
          type: 'number'
        - name: 'name'
          in: 'formData'
          description: '更新後のactorのname'
          required: true
          type: 'string'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Actor'
  /task_types:
    get:
      tags:
        - 'task_types'
      responses:
        '200':
          description: OK
          schema:
            type: 'array'
            items:
              $ref: '#/definitions/TaskType'
  /path_types:
    get:
      tags:
        - 'path_types'
      responses:
        '200':
          description: OK
          schema:
            type: 'array'
            items:
              $ref: '#/definitions/PathType'

definitions:
  Flow:
    type: 'object'
    properties:
      id:
        type: 'integer'
        format: 'int64'
      name:
        type: 'string'
        format: 'vchar(100)'
      created_at:
        type: 'string'
        format: 'date'
      updated_at:
        type: 'string'
        format: 'date'
    xml:
      name: 'Flow'
  Task:
    type: 'object'
    properties:
      id:
        type: 'integer'
        format: 'int64'
      flow_id:
        type: 'string'
        format: 'vchar(100)'
      name:
        type: 'string'
        format: 'vchar(100)'
      type_id:
        type: 'integer'
        format: 'int64'
      actor_id:
        type: 'integer'
        format: 'int64'
      x:
        type: 'number'
        format: 'float'
      y:
        type: 'number'
        format: 'float'
      label:
        type: 'string'
        format: 'vchar(30)'
      created_at:
        type: 'string'
        format: 'date'
      updated_at:
        type: 'string'
        format: 'date'
    xml:
      name: 'Task'
  Path:
    type: 'object'
    properties:
      id:
        type: 'integer'
        format: 'int64'
      flow_id:
        type: 'string'
        format: 'vchar(100)'
      type_id:
        type: 'integer'
        format: 'int64'
      from_task_id:
        type: 'integer'
        format: 'vchar(100)'
      to_task_id:
        type: 'integer'
        format: 'vchar(100)'
      label:
        type: 'string'
        format: 'vchar(30)'
      created_at:
        type: 'string'
        format: 'date'
      updated_at:
        type: 'string'
        format: 'date'
    xml:
      name: 'Path'
  Actor:
    type: 'object'
    properties:
      id:
        type: 'integer'
        format: 'int64'
      name:
        type: 'string'
        format: 'vchar(100)'
      flow_id:
        type: 'integer'
        format: 'int64'
      created_at:
        type: 'string'
        format: 'date'
      updated_at:
        type: 'string'
        format: 'date'
    xml:
      name: 'Actor'
  TaskType:
    type: 'object'
    properties:
      id:
        type: 'integer'
        format: 'int64'
      name:
        type: 'string'
        format: 'vchar(100)'
      created_at:
        type: 'string'
        format: 'date'
      updated_at:
        type: 'string'
        format: 'date'
    xml:
      name: 'TaskType'
  PathType:
    type: 'object'
    properties:
      id:
        type: 'integer'
        format: 'int64'
      name:
        type: 'string'
        format: 'vchar(100)'
      created_at:
        type: 'string'
        format: 'date'
      updated_at:
        type: 'string'
        format: 'date'
    xml:
      name: 'PathType'
